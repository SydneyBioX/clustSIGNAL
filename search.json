[{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"clustsignal","dir":"Articles","previous_headings":"","what":"ClustSIGNAL","title":"ClustSIGNAL tutorial","text":"R package ClustSIGNAL performs spatially-informed cell type clustering high-resolution spatial transcriptomics data. uses gene expression spatial locations cells group clusters.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"motivation","dir":"Articles","previous_headings":"ClustSIGNAL","what":"Motivation","title":"ClustSIGNAL tutorial","text":"ClustSIGNAL aims : () overcome data sparsity using adaptive smoothing approach guided heterogeneity/homogeneity individual cell’s neighbourhood; (ii) embed spatial context information gene expression generating transformed, adaptively smoothed expression matrix can used clustering; (iii) generate entropy data captures heterogeneity/homogeneity information cell’s neighbourhood can used create spatial map heterogeneity distribution sample tissue.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"overview","dir":"Articles","previous_headings":"ClustSIGNAL","what":"Overview","title":"ClustSIGNAL tutorial","text":"vignette, demonstrate spatially-informed clustering can performed ClustSIGNAL, assessing clusters using pre-defined metrics like adjusted rand index (ARI) normalized mutual information (NMI) aricode R package, well spatial plots visualize . ClustSIGNAL multisample spatial clustering approach, show using example dataset. also display use entropy values, generated part ClustSIGNAL process, understanding tissue structure sample. ClustSIGNAL flexible allows , () user-provided input values parameters (default parameter values also provided) (ii) running ClustSIGNAL step--step. tutorial demonstrates step--step clustering can performed, parameters need defined step.","code":"# load required packages library(clustSIGNAL) library(scater) library(ggplot2) library(dplyr) library(patchwork) library(aricode)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"single-sample-analysis-with-clustsignal","dir":"Articles","previous_headings":"","what":"Single sample analysis with ClustSIGNAL","title":"ClustSIGNAL tutorial","text":"section, use SeqFISH mouse embryo dataset Lohoff et al, 2021, contains spatial transcriptomics data 3 mouse embryos, 351 genes 57,536 cells. vignette, subset data randomly selecting 5000 cells Embryo 2, excluding cells manually annotated ‘Low quality’. begin creating SpatialExperiment object gene expression cell information data subset, ensuring spatial coordinates stored spatialCoords within SpatialExperiment object. data already SpatialExperiment object, ClustSIGNAL can run long basic requirements like spatial coordinates, normalized counts, unique cell names met. running ClustSIGNAL, need know column name colData slot SpatialExperiment object contains sample labels. , sample labels ‘sample_id’ column.","code":"# load me_expr containing gene expression logcounts # load me_data containing cell metadata including x-y coordinates data(mEmbryo2) # to create a SpatialExperiment object we need gene expression, cell metadata,  # and cell locations. spe <- SpatialExperiment::SpatialExperiment(   assays = list(logcounts = me_expr),    colData = me_data,   # spatialCoordsNames requires column names in me_data that contain    # xy-coordinates of cells   spatialCoordsNames = c(\"X\", \"Y\")) spe ## class: SpatialExperiment  ## dim: 351 5000  ## metadata(0): ## assays(1): logcounts ## rownames(351): Abcc4 Acp5 ... Zfp57 Zic3 ## rowData names(0): ## colnames(5000): embryo2_Pos29_cell100_z2 embryo2_Pos29_cell101_z5 ... ##   embryo2_Pos50_cell97_z5 embryo2_Pos50_cell99_z5 ## colData names(4): uniqueID pos celltype_mapped_refined sample_id ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## spatialCoords names(2) : X Y ## imgData names(0): spe |> colData() |> colnames() # column names in the metadata ## [1] \"uniqueID\"                \"pos\"                     ## [3] \"celltype_mapped_refined\" \"sample_id\""},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"running-clustsignal-on-one-sample","dir":"Articles","previous_headings":"Single sample analysis with ClustSIGNAL","what":"Running ClustSIGNAL on one sample","title":"ClustSIGNAL tutorial","text":"simplest ClustSIGNAL run requires SpatialExperiment object, colData column name sample labels, type output generate. parameters can modified include: () dimRed - specifies low dimension data use (default ‘None’); (ii) batch - TRUE, ClustSIGNAL performs batch correction needs valid value batch_by; (iii) batch_by - name metadata column containing sample batches contributing batch effect (default ‘None’); (iv) NN - specifies neighbourhood size (default 30); (v) kernel - specifies distribution use weight generation (default ‘G’ Gaussian); (vi) spread - distribution spread value (default 0.3 Gaussian); (vii) sort - TRUE, ClustSIGNAL sorts neighbourhood; (viii) threads - specifies number cpus use parallel runs (default 1); (ix) clustParams - list parameters use non-spatial clustering components. Furthermore, adaptively smoothed gene expression data generated ClustSIGNAL useful downstream analyses accessible output options ‘s’ ‘’ selected return final SpatialExperiment object. returns list contains ClustSIGNAL clusters dataframe (clusters), matrix cell IDs cell’s neighbourhood (neighbours NN neighbourhood size), final SpatialExperiment object (spe_final). cluster dataframe contains cell IDs cluster labels assigned ClustSIGNAL. output SpatialExperiment object contains adaptively smoothed gene expression data additional assay (smoothed), well initial clusters subclusters, entropy values, ClustSIGNAL clusters.","code":"set.seed(100) samples <- \"sample_id\" # column name containing sample names # to run ClustSIGNAL, requires a SpatialExperiment object, column name of sample # labels in colData slot, and the output type to generate (clusters, neighbours, # and/or final spe object). res_emb <- clustSIGNAL(spe, samples, outputs = \"a\") ## [1] \"Calculating PCA. Time 06:40:58\" ## [1] \"ClustSIGNAL run started. Time 06:40:59\" ## [1] \"Initial nonspatial clustering performed. Clusters = 9 Time 06:41:00\" ## [1] \"Nonspatial subclustering performed. Subclusters = 31 Time 06:41:02\" ## [1] \"Regions defined. Time 06:41:04\" ## [1] \"Region heterogeneity calculated. Time 06:41:04\" ## [1] \"Smoothing performed. NN = 30 Kernel = G Spread = 0.3 Time 06:41:05\" ## [1] \"Nonspatial clustering performed on smoothed data. Clusters = 14 Time 06:41:06\" ## [1] \"ClustSIGNAL run completed. 06:41:06\" ## Time difference of 7.704061 secs res_emb |> names() # names of the outputs generated ## [1] \"clusters\"   \"neighbours\" \"spe_final\" res_emb$clusters |> head() # cluster data frame has cell IDs and cluster labels ##                      Cells Clusters ## 1 embryo2_Pos29_cell100_z2       12 ## 2 embryo2_Pos29_cell101_z5       12 ## 3 embryo2_Pos29_cell104_z2       12 ## 4 embryo2_Pos29_cell104_z5       12 ## 5 embryo2_Pos29_cell105_z2       12 ## 6 embryo2_Pos29_cell108_z5       12 # for convenience with downstream analyses, we will replace the original spe # object with the one generated by ClustSIGNAL. This does not lead to any loss  # of information as ClustSIGNAL only adds information to the input spe object. spe <- res_emb$spe_final spe ## class: SpatialExperiment  ## dim: 351 5000  ## metadata(0): ## assays(2): logcounts smoothed ## rownames(351): Abcc4 Acp5 ... Zfp57 Zic3 ## rowData names(0): ## colnames(5000): embryo2_Pos29_cell100_z2 embryo2_Pos29_cell101_z5 ... ##   embryo2_Pos50_cell97_z5 embryo2_Pos50_cell99_z5 ## colData names(8): uniqueID pos ... entropy ClustSIGNAL ## reducedDimNames(2): PCA PCA.smooth ## mainExpName: NULL ## altExpNames(0): ## spatialCoords names(2) : X Y ## imgData names(1): sample_id spe |> colData() |> colnames() ## [1] \"uniqueID\"                \"pos\"                     ## [3] \"celltype_mapped_refined\" \"sample_id\"               ## [5] \"initCluster\"             \"initSubcluster\"          ## [7] \"entropy\"                 \"ClustSIGNAL\""},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"visualising-clustsignal-clusters","dir":"Articles","previous_headings":"Single sample analysis with ClustSIGNAL","what":"Visualising ClustSIGNAL clusters","title":"ClustSIGNAL tutorial","text":"use spatial coordinates cells ClustSIGNAL cluster labels entropy values visualize clustering output.  spatial location entropy distribution clusters provide spatial context cells neighbourhoods, well compositions neighbourhoods. example, panel (B) low entropy clusters generally found space homogeneous, whereas high entropy clusters belong neighbourhoods cell diversity. can also visualized spatial plot panel ().","code":"colors <- c(\"#635547\", \"#8EC792\", \"#9e6762\", \"#FACB12\", \"#3F84AA\", \"#0F4A9C\",              \"#ff891c\", \"#EF5A9D\", \"#C594BF\", \"#DFCDE4\", \"#139992\", \"#65A83E\",              \"#8DB5CE\", \"#005579\", \"#C9EBFB\", \"#B51D8D\", \"#532C8A\", \"#8870ad\",              \"#cc7818\", \"#FBBE92\", \"#EF4E22\", \"#f9decf\", \"#c9a997\", \"#C72228\",              \"#f79083\", \"#F397C0\", \"#DABE99\", \"#c19f70\", \"#354E23\", \"#C3C388\",             \"#647a4f\", \"#CDE088\", \"#f7f79e\", \"#F6BFCB\", \"#7F6874\", \"#989898\",              \"#1A1A1A\", \"#FFFFFF\", \"#e6e6e6\", \"#77441B\", \"#F90026\", \"#A10037\",              \"#DA5921\", \"#E1C239\", \"#9DD84A\") # for plotting with scater R package, we need to add the spatial coordinates  # to the reduced dimension slot of the spe object reducedDim(spe, \"spatial\") <- spatialCoords(spe) # spatial plot spt_clust <- scater::plotReducedDim(   spe, colour_by = \"ClustSIGNAL\", dimred = \"spatial\", point_alpha = 1,   point_size = 4, scattermore = TRUE) +   ggtitle(\"A. Spatial plot of clusters\") +   scale_color_manual(values = colors) +   guides(colour = guide_legend(title = \"Clusters\",                                 override.aes = list(size = 5))) +   theme(text = element_text(size = 12)) ## Scale for colour is already present. ## Adding another scale for colour, which will replace the existing scale. # entropy distribution plotted at cluster-level can indicate which clusters  # have cells from homogeneous/heterogeneous space.  df_met <- spe |> colData() %>% as.data.frame() ct_ent <- df_met %>%    mutate(ClustSIGNAL = as.character(ClustSIGNAL)) %>%   group_by(ClustSIGNAL) %>%   # calculating median entropy of each cluster category   summarise(mdEntropy = median(entropy)) %>%    # reordering clusters by their median entropy value   arrange(mdEntropy) df_met$ClustSIGNAL <- factor(df_met$ClustSIGNAL, levels = ct_ent$ClustSIGNAL) col_ent <- colors[as.numeric(as.character(ct_ent$ClustSIGNAL))] box_clust <- df_met %>%   ggplot(aes(x = ClustSIGNAL, y = entropy, fill = ClustSIGNAL)) +   geom_boxplot() +   scale_fill_manual(values = col_ent) +   ggtitle(\"B. Entropy distribution of clusters\") +   labs(x = \"ClustSIGNAL clusters\", y = \"Entropy\", name = \"Clusters\") +   theme_classic() +   theme(legend.position = \"none\",         text = element_text(size = 12),         axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),         plot.title = element_text(face = \"bold\")) spt_clust + box_clust + patchwork::plot_layout(guides = \"collect\",                                                 widths = c(2, 3))"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"assessing-clustering-accuracy","dir":"Articles","previous_headings":"Single sample analysis with ClustSIGNAL","what":"Assessing clustering accuracy","title":"ClustSIGNAL tutorial","text":"assess clustering efficiency ClustSIGNAL using commonly used clustering metrics ARI NMI, usable prior cell annotations available. , ARI NMI measure similarity agreement (respectively) cluster labels obtained ClustSIGNAL manual cell annotations.","code":"# to assess the accuracy of clustering, the cluster labels are often compared to # prior annotations. Here, we compare ClustSIGNAL cluster labels to annotations  # available with this public data. spe |> colData() %>%    as.data.frame() %>%   summarise(     ARI = aricode::ARI(celltype_mapped_refined, ClustSIGNAL), # calculate ARI     NMI = aricode::NMI(celltype_mapped_refined, ClustSIGNAL)) # calculate NMI ##         ARI       NMI ## 1 0.3117711 0.5663197"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"entropy-spread-and-distribution","dir":"Articles","previous_headings":"Single sample analysis with ClustSIGNAL","what":"Entropy spread and distribution","title":"ClustSIGNAL tutorial","text":"entropy values generated ClustSIGNAL process can useful analyzing sample structure. entropy range can indicate whether tissue sample contains homogeneous regions. example, min_Entropy 0 means cells placed completely homogeneous space looking neighbourhood size 30 cells (NN = 30 used generating entropy values). min_Entropy_count gives us idea total number low entropy neighbourhoods sample.  spread spatial distribution neighbourhood entropies can useful visually assessing comparing tissue compositions samples - low entropy neighbourhoods homogeneous likely contain cell type-specific niches, whereas high entropy neighbourhoods heterogeneous uniform distribution different cell types.","code":"# we can assess the overall entropy distribution of the dataset spe |> colData() %>%    as.data.frame() %>%   summarise(min_Entropy = min(entropy),             min_Entropy_count = sum(spe$entropy == 0),             max_Entropy = max(entropy),             mean_Entropy = mean(entropy)) ##   min_Entropy min_Entropy_count max_Entropy mean_Entropy ## 1           0               382      3.1518     1.119852 # we can also visualize the distribution and spread of the entropy values hst_ent <- spe |> colData() %>%    as.data.frame() %>%   ggplot(aes(entropy)) +   geom_histogram(binwidth = 0.05) +   ggtitle(\"A. Entropy spread\") +   labs(x = \"Entropy\", y = \"Number of neighbourhoods\") +   theme_classic() +   theme(text = element_text(size = 12),         plot.title = element_text(face = \"bold\")) spt_ent <- scater::plotReducedDim(spe, colour_by = \"entropy\",                                     # specify spatial low dimension                                     dimred = \"spatial\", point_alpha = 1,                                     point_size = 4, scattermore = TRUE) +   ggtitle(\"B. Entropy spatial distribution\") +   scale_colour_gradient2(\"Entropy\", low = \"grey\", high = \"blue\") +   scale_size_continuous(range = c(0, max(spe$entropy))) +   theme(text = element_text(size = 12)) ## Scale for colour is already present. ## Adding another scale for colour, which will replace the existing scale. hst_ent + spt_ent"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"multisample-analysis-with-clustsignal","dir":"Articles","previous_headings":"","what":"Multisample analysis with ClustSIGNAL","title":"ClustSIGNAL tutorial","text":", use MERFISH mouse hypothalamus preoptic region dataset Moffitt et al, 2018, contains spatial transcriptomics data 181 samples, 155 genes 1,027,080 cells. vignette, subset data selecting 6000 random cells 3 samples - Animal 1 Bregma -0.09 (2080 cells), Animal 7 Bregma 0.16 (1936 cells), Animal 7 Bregma -0.09 (1984 cells), excluding cells manually annotated ‘Ambiguous’ 20 genes expression generated using different technology. start analysis creating SpatialExperiment object gene expression cell information data subset, ensuring spatial coordinates stored spatialCoords slot within spe object. Next identify sample labels column SpatialExperiment object. , sample labels ‘samples’ column object.","code":"# load mh_expr containing gene expression logcounts # load mh_data containing cell metadata and cell x-y coordinates data(mHypothal) # create spe object using gene expression, cell metadata, and cell locations spe2 <- SpatialExperiment(assays = list(logcounts = mh_expr),                            colData = mh_data,                           # spatialCoordsNames requires column names in                            # mh_data that contain xy-coordinates of cells                           spatialCoordsNames = c(\"X\", \"Y\")) spe2 ## class: SpatialExperiment  ## dim: 135 6000  ## metadata(0): ## assays(1): logcounts ## rownames(135): Ace2 Adora2a ... Ttn Ttyh2 ## rowData names(0): ## colnames(6000): 74d3f69d-e8f2-4c33-a8ca-fac3eb65e55a ##   41158ddc-e70c-487b-b891-0cb3c8452555 ... ##   54145623-7071-482c-b9da-d0d2dd31274a ##   96bc85ce-b993-4fb1-8e0c-165f83f0cfd0 ## colData names(4): Cell_ID Cell_class sample_id samples ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## spatialCoords names(2) : X Y ## imgData names(0): spe2 |> colData() |> str() # metadata summary ## Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots ##   ..@ rownames       : chr [1:6000] \"74d3f69d-e8f2-4c33-a8ca-fac3eb65e55a\" \"41158ddc-e70c-487b-b891-0cb3c8452555\" \"46ba8016-2c4f-4ef0-84c9-3ee3951afdfd\" \"ac9f1af8-8b03-4b2f-b29c-929ae2b240dc\" ... ##   ..@ nrows          : int 6000 ##   ..@ elementType    : chr \"ANY\" ##   ..@ elementMetadata: NULL ##   ..@ metadata       : list() ##   ..@ listData       :List of 4 ##   .. ..$ Cell_ID   : chr [1:6000] \"74d3f69d-e8f2-4c33-a8ca-fac3eb65e55a\" \"41158ddc-e70c-487b-b891-0cb3c8452555\" \"46ba8016-2c4f-4ef0-84c9-3ee3951afdfd\" \"ac9f1af8-8b03-4b2f-b29c-929ae2b240dc\" ... ##   .. ..$ Cell_class: chr [1:6000] \"Endothelial 1\" \"Endothelial 1\" \"Pericytes\" \"Astrocyte\" ... ##   .. ..$ sample_id : chr [1:6000] \"sample01\" \"sample01\" \"sample01\" \"sample01\" ... ##   .. ..$ samples   : Factor w/ 3 levels \"1.-0.09\",\"7.-0.09\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"clustsignal-run","dir":"Articles","previous_headings":"Multisample analysis with ClustSIGNAL","what":"ClustSIGNAL run","title":"ClustSIGNAL tutorial","text":"important concept take account running multisample analysis batch effects. gathering samples different sources different technologies/procedures, technical batch effects might introduced dataset. can run ClustSIGNAL batch correction mode simply setting batch = TRUE batch_by = “group”, group name colData column spe object contains batch information. ClustSIGNAL uses harmony internally batch correction.","code":"set.seed(110) # ClustSIGNAL can be run on a dataset with multiple samples. As before, we need # the SpatialExperiment object and column name of sample labels in the object.  # The method can be run in parallel through the threads option. Here we use  # thread = 4 to use 4 cores. # Since no batch effects were observed in this data subset, we have not used  # the batch and batch_by options. samples <- \"samples\" # column name containing sample names res_hyp <- clustSIGNAL(spe2, samples, threads = 4, outputs = \"a\") ## [1] \"Calculating PCA. Time 06:41:09\" ## [1] \"ClustSIGNAL run started. Time 06:41:10\" ## [1] \"Initial nonspatial clustering performed. Clusters = 9 Time 06:41:11\" ## [1] \"Nonspatial subclustering performed. Subclusters = 38 Time 06:41:12\" ## [1] \"Regions defined. Time 06:41:15\" ## [1] \"Region heterogeneity calculated. Time 06:41:17\" ## [1] \"Smoothing performed. NN = 30 Kernel = G Spread = 0.3 Time 06:41:17\" ## [1] \"Nonspatial clustering performed on smoothed data. Clusters = 12 Time 06:41:18\" ## [1] \"ClustSIGNAL run completed. 06:41:18\" ## Time difference of 8.512556 secs # for convenience with downstream analyses, we replace the original spe object  # with the one generated by ClustSIGNAL. spe2 <- res_hyp$spe_final spe2 ## class: SpatialExperiment  ## dim: 135 6000  ## metadata(0): ## assays(2): logcounts smoothed ## rownames(135): Ace2 Adora2a ... Ttn Ttyh2 ## rowData names(0): ## colnames(6000): 74d3f69d-e8f2-4c33-a8ca-fac3eb65e55a ##   41158ddc-e70c-487b-b891-0cb3c8452555 ... ##   54145623-7071-482c-b9da-d0d2dd31274a ##   96bc85ce-b993-4fb1-8e0c-165f83f0cfd0 ## colData names(8): Cell_ID Cell_class ... entropy ClustSIGNAL ## reducedDimNames(2): PCA PCA.smooth ## mainExpName: NULL ## altExpNames(0): ## spatialCoords names(2) : X Y ## imgData names(1): sample_id"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"clustering-metrics","dir":"Articles","previous_headings":"Multisample analysis with ClustSIGNAL","what":"Clustering metrics","title":"ClustSIGNAL tutorial","text":"Clustering entropy results can calculated visualized sample. , entropy range can tell us lot tissue structure samples. Unlike seqFISH subset data, minimum entropy sample 0, , minimum entropy higher indicating tissue doesn’t really cell type-specific niches looking neighbourhood size 30 cells. Moreover, relatively high mean entropy value indicates tissues slices quite heterogeneous.","code":"samplesList <- spe2[[samples]] |> levels() # get sample names samplesList ## [1] \"1.-0.09\" \"7.-0.09\" \"7.0.16\" spe2 |> colData() %>%    as.data.frame() %>%   group_by(samples) %>%   summarise(     # Comparing ClustSIGNAL cluster labels to annotations available with the      # public data to assess its accuracy.     ARI = aricode::ARI(Cell_class, ClustSIGNAL),     NMI = aricode::NMI(Cell_class, ClustSIGNAL),     # Assessing the overall entropy distribution of the samples in the dataset.     min_Entropy = min(entropy),     min_Entropy_count = sum(entropy == 0),     max_Entropy = max(entropy),     mean_Entropy = mean(entropy)) ## # A tibble: 3 × 7 ##   samples   ARI   NMI min_Entropy min_Entropy_count max_Entropy mean_Entropy ##   <fct>   <dbl> <dbl>       <dbl>             <int>       <dbl>        <dbl> ## 1 1.-0.09 0.381 0.513       1.19                  0        4.17         3.19 ## 2 7.-0.09 0.398 0.555       1.08                  0        4.24         3.15 ## 3 7.0.16  0.587 0.613       0.883                 0        4.31         3.08"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"visualizing-clustsignal-clusters","dir":"Articles","previous_headings":"Multisample analysis with ClustSIGNAL","what":"Visualizing ClustSIGNAL clusters","title":"ClustSIGNAL tutorial","text":"ClustSIGNAL performs clustering cells dataset one run, thereby generating clusters across multiple samples. cluster labels need mapped samples. example, cluster 1 represents cell type three samples, without needing explicit mapping samples.  spatial location entropy distribution clusters can compared multisample analysis, providing spatial context cluster cells neighbourhood compositions different samples within dataset. Since clusters generated single run, across different samples. Therefore, cluster represented sample, mean respective cell type present sample.","code":"# for plotting with scater R package, we need to add the spatial coordinates  # to the reduced dimension section reducedDim(spe2, \"spatial\") <- spatialCoords(spe2) # spatial plot - ClustSIGNAL clusters spt_clust2 <- scater::plotReducedDim(spe2, colour_by = \"ClustSIGNAL\",                                     # specify spatial low dimension                                     dimred = \"spatial\", point_alpha = 1,                                     point_size = 4, scattermore = TRUE) +   scale_color_manual(values = colors) +   facet_wrap(vars(spe2[[samples]]), scales = \"free\", nrow = 1) +   guides(colour = guide_legend(title = \"Clusters\",                                override.aes = list(size = 3))) +   theme(text = element_text(size = 12)) ## Scale for colour is already present. ## Adding another scale for colour, which will replace the existing scale. # For visualising cluster-level entropy distribution, we reorder the clusters  # by their median entropy value in each sample df_met2 <- spe2 |> colData() %>% as.data.frame()  box_clust2 <- list() for (s in samplesList) {   df_met_sub <- df_met2[df_met2[[samples]] == s, ]   # calculating median entropy of each cluster in a sample   ct_ent2 <- df_met_sub %>%     mutate(ClustSIGNAL = as.character(ClustSIGNAL)) %>%     group_by(ClustSIGNAL) %>%     summarise(mdEntropy = median(entropy)) %>%     # reordering clusters by their median entropy     arrange(mdEntropy)      df_met_sub$ClustSIGNAL <- factor(df_met_sub$ClustSIGNAL,                                     levels = ct_ent2$ClustSIGNAL)   # box plot of cluster entropy   col_ent2 <- colors[as.numeric(ct_ent2$ClustSIGNAL)]   box_clust2[[s]] <- df_met_sub %>%     ggplot(aes(x = ClustSIGNAL, y = entropy, fill = ClustSIGNAL)) +     geom_boxplot() +     scale_fill_manual(values = col_ent2) +     facet_wrap(vars(samples), nrow = 1) +     labs(x = \"ClustSIGNAL clusters\", y = \"Entropy\") +     ylim(0, NA) +     theme_classic() +     theme(strip.text = element_blank(),           legend.position = \"none\",           text = element_text(size = 12),           axis.text.x = element_text(angle = 90, vjust = 0.5)) } spt_clust2 / (patchwork::wrap_plots(box_clust2[1:3], nrow = 1) +                 plot_layout(axes = \"collect\")) +   plot_layout(guides = \"collect\", heights = c(5, 3)) +   plot_annotation(     title = \"Spatial (top) and entropy (bottom) distributions of clusters\",     theme = theme(plot.title = element_text(hjust = 0.5, face = \"bold\")))"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"visualising-entropy-spread-and-distribution","dir":"Articles","previous_headings":"Multisample analysis with ClustSIGNAL","what":"Visualising entropy spread and distribution","title":"ClustSIGNAL tutorial","text":"multisample analysis, tissue structure different samples dataset can compared using spread spatial distribution neighbourhood entropy measures.  Together, plots help visually assessing tissue compositions samples - 3 samples high entropy neighbourhoods indicating mainly heterogeneous regions uniform distribution different cell types.","code":"hst_ent2 <- spe2 |> colData() %>%    as.data.frame() %>%   ggplot(aes(entropy)) +   geom_histogram(binwidth = 0.05) +   facet_wrap(vars(samples), nrow = 1) +   labs(x = \"Entropy\", y = \"Number of neighbourhoods\") +   theme_classic() +   theme(text = element_text(size = 12)) spt_ent2 <- scater::plotReducedDim(spe2, colour_by = \"entropy\",                                   # specify spatial low dimension                                   dimred = \"spatial\", point_alpha = 1,                                   point_size = 4, scattermore = TRUE) +   scale_colour_gradient2(\"Entropy\", low = \"grey\", high = \"blue\") +   scale_size_continuous(range = c(0, max(spe2$entropy))) +   facet_wrap(vars(spe2[[samples]]), scales = \"free\", nrow = 1) +   theme(strip.text = element_blank(),         text = element_text(size = 12)) ## Scale for colour is already present. ## Adding another scale for colour, which will replace the existing scale. hst_ent2 / spt_ent2 + plot_layout(heights = c(4, 5)) +     plot_annotation(       title = \"Entropy spread (top) and spatial distribution (bottom)\",       theme = theme(plot.title = element_text(hjust = 0.5, face = \"bold\")))"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"clustsignal-step-by-step-run","dir":"Articles","previous_headings":"","what":"ClustSIGNAL step-by-step run","title":"ClustSIGNAL tutorial","text":"ClustSIGNAL five main functions distinct step algorithm. functions accessible can run sequentially generate data intermediate steps, needed. example, ClustSIGNAL can run step--step entropy measurement component, without run complete method. entropy values added SpatialExperiment object can used assessing tissue structure terms heterogeneity. Similarly, adaptively smoothed gene expression can obtained running ClustSIGNAL till adaptive smoothing step. , describe individual ClustSIGNAL functions can used sequentially.","code":"# load logcounts and metadata to the environment data(mEmbryo2)  # as before, we read the data into a SpatialExperiment object spe <- SpatialExperiment(assays = list(logcounts = me_expr),                          colData = me_data, spatialCoordsNames = c(\"X\", \"Y\")) set.seed(100) # first we need to generate low dimension data for initial clustering spe <- scater::runPCA(spe)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"step-1-initial-clustering-and-subclustering","dir":"Articles","previous_headings":"ClustSIGNAL step-by-step run","what":"Step 1: Initial clustering and subclustering","title":"ClustSIGNAL tutorial","text":"first step ClustSIGNAL algorithm initial clustering subclustering. , need provide spe object low embedding information. parameters default values: batch = FALSE batch_by = “None” (batch correction needs performed), threads = 1, clustParams = list(clust_c = 0, subclust_c = 0, iter.max = 30, k = 10, cluster.fun = “louvain”). Among clustering parameters, clust_c subclust_c refer number centers use clustering sub-clustering KmeansParam. default clust_c set 0, case method uses either 5000 centers 1/5th total cells data number centers, whichever lower. Similarly, subclust_c set 0 default, case method uses either 1 center half total cells initial cluster number centers, whichever higher. values clust_c subclust_c, input treated number centers. , two columns added spe object cell metadata: initial cluster labels, initial subcluster labels.","code":"spe <- clustSIGNAL::p1_clustering(spe, dimRed = \"PCA\") ## [1] \"Initial nonspatial clustering performed. Clusters = 9 Time 06:41:24\" ## [1] \"Nonspatial subclustering performed. Subclusters = 31 Time 06:41:26\" spe$initCluster |> head() # clustering output ## [1] 7 7 7 7 3 7 ## Levels: 1 2 3 4 5 6 7 8 9 spe$initSubcluster |> head() # subclustering output ## embryo2_Pos29_cell100_z2 embryo2_Pos29_cell101_z5 embryo2_Pos29_cell104_z2  ##                      7.1                      7.1                      7.1  ## embryo2_Pos29_cell104_z5 embryo2_Pos29_cell105_z2 embryo2_Pos29_cell108_z5  ##                      7.1                      3.3                      7.1  ## 31 Levels: 1.1 1.2 1.3 2.1 2.2 2.3 2.4 3.1 3.2 3.3 4.1 4.2 4.3 4.4 5.1 ... 9.4"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"step-2-neighbourhood-detection","dir":"Articles","previous_headings":"ClustSIGNAL step-by-step run","what":"Step 2: Neighbourhood detection","title":"ClustSIGNAL tutorial","text":"next step involves detecting neighborhood cells. need spe object containing initial cluster initial subcluster labels sample IDs . default, ClustSIGNAL identifies 30 nearest neighbors (NN = 30), sorts neighbourhood (sort = TRUE), use parallel runs (threads = 1). ClustSIGNAL allows use external cell labels generated methods, place initial clusters subclusters. , cell cluster subcluster labels cell must stored colData spe object “initCluster” “initSubcluster”, respectively. generates list containing: neighborhood matrix containing cell IDs, list arrays containing initial subcluster proportions.","code":"# This step generates a list of neighbourhood information. outReg <- clustSIGNAL::neighbourDetect(spe, samples = \"sample_id\") ## [1] \"Regions defined. Time 06:41:28\" outReg$nnCells[1:3, 1:3] ##                          [,1]                       [,2]                       ## embryo2_Pos29_cell100_z2 \"embryo2_Pos29_cell100_z2\" \"embryo2_Pos29_cell90_z5\"  ## embryo2_Pos29_cell101_z5 \"embryo2_Pos29_cell101_z5\" \"embryo2_Pos29_cell117_z2\" ## embryo2_Pos29_cell104_z2 \"embryo2_Pos29_cell104_z2\" \"embryo2_Pos29_cell94_z5\"  ##                          [,3]                       ## embryo2_Pos29_cell100_z2 \"embryo2_Pos29_cell104_z2\" ## embryo2_Pos29_cell101_z5 \"embryo2_Pos29_cell97_z5\"  ## embryo2_Pos29_cell104_z2 \"embryo2_Pos29_cell100_z2\" outReg$regXclust[[1]] ## arr ##        3.3        6.1        6.2        7.1        7.2        9.2  ## 0.03225806 0.03225806 0.03225806 0.83870968 0.03225806 0.03225806"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"step-3-entropy-measure","dir":"Articles","previous_headings":"ClustSIGNAL step-by-step run","what":"Step 3: Entropy measure","title":"ClustSIGNAL tutorial","text":"Now know neighbourhood cell, can calculate entropy cell’s neighborhood. , need spe object initial subcluster proportions. step can run parallel, default use 1 cpu core. entropy values added spe object cell metadata.","code":"spe <- clustSIGNAL::entropyMeasure(spe, outReg$regXclust) ## [1] \"Region heterogeneity calculated. Time 06:41:28\" spe$entropy |> head() # entropy values ## [1] 1.01189 0.20559 0.61207 0.54755 0.20559 0.00000"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"step-4-adaptive-smoothing","dir":"Articles","previous_headings":"ClustSIGNAL step-by-step run","what":"Step 4: Adaptive smoothing","title":"ClustSIGNAL tutorial","text":"Using entropy values, can perform adaptive smoothing. requires spe object containing entropy values well neighborhood matrix cell IDs generated neighbourhood detection. parameters default values provided include number neighbors (NN = 30), weight distribution type (kernel = “G” Gaussian), distribution spread (spread = 0.05 representing standard deviation Gaussian distribution; exponential distribution recommend using spread 5 indicating rate distribution), number cores (threads = 1) use parallel runs. adaptively smoothed gene expression data added spe object assays ‘smoothed’.","code":"spe <- clustSIGNAL::adaptiveSmoothing(spe, outReg$nnCells) ## [1] \"Smoothing performed. NN = 30 Kernel = G Spread = 0.3 Time 06:41:29\" assay(spe, \"smoothed\")[1:5, 1:3] ## 5 x 3 sparse Matrix of class \"dgCMatrix\" ##         embryo2_Pos29_cell100_z2 embryo2_Pos29_cell101_z5 ## Abcc4                 0.32885379                0.2841961 ## Acp5                  0.08959616                0.1189281 ## Acvr1                 0.40086591                0.3359335 ## Acvr2a                0.51895151                0.5066584 ## Adora2b               0.12246298                0.1257018 ##         embryo2_Pos29_cell104_z2 ## Abcc4                 0.32878008 ## Acp5                  0.09205565 ## Acvr1                 0.39842503 ## Acvr2a                0.47449863 ## Adora2b               0.08577944"},{"path":"https://sydneybiox.github.io/clustSIGNAL/articles/clustSIGNAL.html","id":"step-5-final-clustering","dir":"Articles","previous_headings":"ClustSIGNAL step-by-step run","what":"Step 5: Final clustering","title":"ClustSIGNAL tutorial","text":"final step involves performing clustering adaptively smoothed data. need provide spe object containing adaptively smoothed data. step default clustering batch correction parameters initial clustering first step. Cluster labels added colData spe object ClustSIGNAL column","code":"spe <- clustSIGNAL::p2_clustering(spe) ## [1] \"Nonspatial clustering performed on smoothed data. Clusters = 14 Time 06:41:30\" spe$ClustSIGNAL |> head() # ClustSIGNAL cluster labels ## [1] 12 12 12 12 12 12 ## Levels: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 sessionInfo() ## R version 4.4.3 (2025-02-28) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] aricode_1.0.3               patchwork_1.3.0             ##  [3] dplyr_1.1.4                 scater_1.34.1               ##  [5] ggplot2_3.5.1               scuttle_1.16.0              ##  [7] clustSIGNAL_0.99.9          SpatialExperiment_1.16.0    ##  [9] SingleCellExperiment_1.28.1 SummarizedExperiment_1.36.0 ## [11] Biobase_2.66.0              GenomicRanges_1.58.0        ## [13] GenomeInfoDb_1.42.3         IRanges_2.40.1              ## [15] S4Vectors_0.44.0            BiocGenerics_0.52.0         ## [17] MatrixGenerics_1.18.1       matrixStats_1.5.0           ## [19] BiocStyle_2.34.0            ##  ## loaded via a namespace (and not attached): ##  [1] gridExtra_2.3           rlang_1.1.5             magrittr_2.0.3          ##  [4] compiler_4.4.3          systemfonts_1.2.1       vctrs_0.6.5             ##  [7] reshape2_1.4.4          stringr_1.5.1           pkgconfig_2.0.3         ## [10] crayon_1.5.3            fastmap_1.2.0           magick_2.8.6            ## [13] XVector_0.46.0          labeling_0.4.3          utf8_1.2.4              ## [16] rmarkdown_2.29          UCSC.utils_1.2.0        ggbeeswarm_0.7.2        ## [19] ragg_1.3.3              xfun_0.51               bluster_1.16.0          ## [22] zlibbioc_1.52.0         cachem_1.1.0            beachmat_2.22.0         ## [25] jsonlite_1.9.1          DelayedArray_0.32.0     BiocParallel_1.40.0     ## [28] irlba_2.3.5.1           parallel_4.4.3          cluster_2.1.8           ## [31] R6_2.6.1                bslib_0.9.0             stringi_1.8.4           ## [34] scattermore_1.2         jquerylib_0.1.4         Rcpp_1.0.14             ## [37] bookdown_0.42           knitr_1.50              Matrix_1.7-2            ## [40] igraph_2.1.4            tidyselect_1.2.1        abind_1.4-8             ## [43] yaml_2.3.10             viridis_0.6.5           codetools_0.2-20        ## [46] lattice_0.22-6          tibble_3.2.1            plyr_1.8.9              ## [49] withr_3.0.2             evaluate_1.0.3          desc_1.4.3              ## [52] pillar_1.10.1           BiocManager_1.30.25     generics_0.1.3          ## [55] munsell_0.5.1           scales_1.3.0            glue_1.8.0              ## [58] tools_4.4.3             BiocNeighbors_2.0.1     ScaledMatrix_1.14.0     ## [61] fs_1.6.5                cowplot_1.1.3           grid_4.4.3              ## [64] colorspace_2.1-1        GenomeInfoDbData_1.2.13 beeswarm_0.4.0          ## [67] BiocSingular_1.22.0     vipor_0.4.7             cli_3.6.4               ## [70] rsvd_1.0.5              textshaping_1.0.0       S4Arrays_1.6.0          ## [73] viridisLite_0.4.2       gtable_0.3.6            sass_0.4.9              ## [76] digest_0.6.37           SparseArray_1.6.2       ggrepel_0.9.6           ## [79] rjson_0.2.23            farver_2.1.2            htmltools_0.5.8.1       ## [82] pkgdown_2.1.1           lifecycle_1.0.4         httr_1.4.7              ## [85] harmony_1.2.3"},{"path":"https://sydneybiox.github.io/clustSIGNAL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratibha Panwar. Maintainer, author, contributor. Boyi Guo. Author. Haowen Zhao. Author. Stephanie Hicks. Author. Shila Ghazanfar. Author, contributor.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Panwar P, Guo B, Zhao H, Hicks S, Ghazanfar S (2025). clustSIGNAL: ClustSIGNAL: spatial clustering method. R package version 0.99.9, https://sydneybiox.github.io/clustSIGNAL/.","code":"@Manual{,   title = {clustSIGNAL: ClustSIGNAL: a spatial clustering method},   author = {Pratibha Panwar and Boyi Guo and Haowen Zhao and Stephanie Hicks and Shila Ghazanfar},   year = {2025},   note = {R package version 0.99.9},   url = {https://sydneybiox.github.io/clustSIGNAL/}, }"},{"path":"https://sydneybiox.github.io/clustSIGNAL/index.html","id":"clustsignal","dir":"","previous_headings":"","what":"ClustSIGNAL: a spatial clustering method","title":"ClustSIGNAL: a spatial clustering method","text":"ClustSIGNAL: Clustering Spatially Informed Gene expression Neighbourhood Adapted Learning. R package perform spatially-informed cell type clustering high-resolution spatial transcriptomics data. method two-fold motivation: overcoming data sparsity using neighbourhood heterogeneity information guide adaptive smoothing approach, performing spatially-informed clustering embedding spatial context gene expression. achieve , calculate entropy measure heterogeneity cell neighbourhoods use generate weight distributions perform adaptive smoothing gene expression. Homogeneous neighbourhoods generally low entropy, , smoothing performed cells neighbourhoods. Contrarily, heterogeneous neighbourhoods high entropy smoothed much smaller region. resulting adaptively smoothed gene expression used clustering. tutorial use ClustSIGNAL, see vignette website.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ClustSIGNAL: a spatial clustering method","text":"install ClustSIGNAL via Bioconductor: install ClustSIGNAL GitHub:","code":"library(BiocManager) BiocManager::install(\"clustSIGNAL\") # install.packages(\"devtools\") devtools::install_github(\"SydneyBioX/clustSIGNAL\")"},{"path":"https://sydneybiox.github.io/clustSIGNAL/index.html","id":"method-description","dir":"","previous_headings":"","what":"Method description","title":"ClustSIGNAL: a spatial clustering method","text":"Figure: ClustSIGNAL method overview. , present ClustSIGNAL, spatial clustering method developed handle data sparsity considering variability cell arrangement tissue regions. core steps involved method sequential: 1. method starts non-spatial clustering subclustering (default louvain clustering) classify cells clusters subclusters refer ‘initial clusters’ ‘initial subclusters’, respectively. 2. neighbourhood cell defined terms initial subcluster composition. 3. cells neighbourhood also sorted rearranged neighbours belonging initial clusters index cell placed closer . 4. Neighbourhood heterogeneity measured entropy, high entropy value indicates heterogeneity neighbourhood low entropy value indicates homogeneous neighbourhood. 5. entropy values used generate weight distributions specific neighbourhood. 6. gene expressions cells adaptively smoothed using entropy-guided weight distributions; cells heterogeneous neighbourhoods (high entropy regions) undergo smoothing smaller region, whereas cells homogeneous neighbourhoods (low entropy regions) undergo smoothing larger region. 7. Non-spatial clustering performed adaptively smoothed gene expression generate ClustSIGNAL clusters.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/index.html","id":"clustsignal-parameters","dir":"","previous_headings":"","what":"ClustSIGNAL parameters","title":"ClustSIGNAL: a spatial clustering method","text":"ClustSIGNAL package uses SpatialExperiment object input. provide users number parameters explore experiment , well prior tested default values quick runs. ClustSIGNAL can used single sample multisample analysis just one function call. list parameters offered possible values: spe - SpatialExperiment object cell spatial coordinates normalized gene expression . samples - column name cell metadata spe object contains sample names. dimRed - dimensionality reduction method name reduced dimensions spe object. Default value “None”, case PCA calculated used low dimension data. batch - whether batch correction performed. Default value False. batch_by - column name cell metadata spe object containing groups perform batch correction. default, batch_by set “None”. batch option set True, batch_by value must changed group name perform batch correction. NN - neighbourhood size terms number nearest neighbours consider. Value > 1. Default value 30. kernel - type weight distribution use. Can Gaussian (default) exponential distribution. spread - value distribution parameter - standard deviation Gaussian distribution rate exponential distribution. Default value 0.3, recommended Gaussian distribution. exponential distribution, recommended value 5. sort - whether cell neighbourhoods sorted initial cluster labels. Default value True. threads - number cpus use parallel runs. Default value 1. outputs - choice output types. Default value ‘c’ list containing data frame cell IDs ClustSIGNAL cluster labels. possible values “n” list ClustSIGNAL clusters dataframe neighbourhood matrix, “s” list ClustSIGNAL clusters dataframe final SpatialExperiment object, “” list 3 outputs - ClustSIGNAL clusters dataframe, neighbourhood matrix, final spe object. clustParams - parameter options TwoStepParam clustering methods bluster package. clustering parameters following order list: clust_c represents number centers clustering KmeansParam. default set 0, case method uses either 5000 centers 1/5th total cells data number centers, whichever lower. subclust_c represents number centers sub-clustering initial clusters KmeansParam. default value 0, case method uses either 1 center half total cells initial cluster number centers, whichever higher. iter.max maximum number iterations perform clustering subclustering KmeansParam. Default value 30. k indicates k-value used clustering/subclustering NNGraphParam. Default value 10. cluster.fun graph clustering method used NNGraphParam. default, Louvain method used.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/index.html","id":"running-clustsignal","dir":"","previous_headings":"","what":"Running ClustSIGNAL","title":"ClustSIGNAL: a spatial clustering method","text":"running ClustSIGNAL, important ensure input SpatialExperiment object spatial coordinates stored spatialCoords matrix. Otherwise, method throw error asking user provide spatial coordinates.","code":"# load required packages library(clustSIGNAL)  data(ClustSignal_example)  # Here, the sample labels are in 'sample_id' column. res <- clustSIGNAL(spe, samples = \"sample_id\", outputs = \"a\")"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/ClustSignal_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data with SpatialExperiment object — ClustSignal_example","title":"Example data with SpatialExperiment object — ClustSignal_example","text":"example data generated mouse embryo spatial transcriptomics dataset 3 mouse embryos, 351 genes total 57536 cells. running examples, subset data selecting 1000 random cells embryo 2, excluding cells annotated 'low quality'. subsetting, expression 351 genes 1000 cells embryo 2.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/ClustSignal_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data with SpatialExperiment object — ClustSignal_example","text":"","code":"data(ClustSignal_example)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/ClustSignal_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data with SpatialExperiment object — ClustSignal_example","text":"spe spatialExperiment object containing gene expression matrix normalised counts, rows indicate genes columns indicate cells. Also, contains cell metadata including cell IDs, sample IDs, cell type annotations, x-y coordinates cells. nnCells matrix row corresponds cell spe object, columns correspond nearest neighbors. regXclust list element corresponds cell spe object, contains cluster composition proportions.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/ClustSignal_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data with SpatialExperiment object — ClustSignal_example","text":"Integration spatial single-cell transcriptomic data elucidates mouse organogenesis, Nature Biotechnology, 2021. Webpage: https://www.nature.com/articles/s41587-021-01006-2","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/adaptiveSmoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive smoothing — adaptiveSmoothing","title":"Adaptive smoothing — adaptiveSmoothing","text":"function perform weighted, adaptive smoothing gene expression cell based heterogeneity neighbourhood. Heterogeneous neighbourhoods smoothed less higher weights given cells belonging initial cluster index cell. Homogeneous neighbourhoods smoothed similar weights given cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/adaptiveSmoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive smoothing — adaptiveSmoothing","text":"","code":"adaptiveSmoothing(spe, nnCells, NN = 30, kernel = \"G\", spread = 0.3)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/adaptiveSmoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive smoothing — adaptiveSmoothing","text":"spe SpatialExperiment object containing neighbourhood entropy values cell. nnCells character matrix NN nearest neighbours - rows index cells columns nearest neighbours ranging closest farthest neighbour. sort = TRUE, neighbours belonging initial cluster index cell moved closer . NN integer number neighbouring cells function consider. value must greater equal 1. Default value 30. kernel character type distribution used. two valid values \"G\" \"E\" Gaussian exponential distributions, respectively. Default value \"G\". spread numeric value distribution spread, represented standard deviation Gaussian distribution rate exponential distribution. Default value 0.3 Gaussian distribution. recommended value 5 exponential distribution.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/adaptiveSmoothing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive smoothing — adaptiveSmoothing","text":"SpatialExperiment object including smoothed gene expression additional assay.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/adaptiveSmoothing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adaptive smoothing — adaptiveSmoothing","text":"","code":"data(ClustSignal_example)  # requires matrix containing NN nearest neighbour cell labels (nnCells), # generated using the neighbourDetect() function spe <- clustSIGNAL::adaptiveSmoothing(spe, nnCells) #> [1] \"Smoothing performed. NN = 30 Kernel = G Spread = 0.3 Time 06:40:43\" spe #> class: SpatialExperiment  #> dim: 351 1000  #> metadata(0): #> assays(2): logcounts smoothed #> rownames(351): Abcc4 Acp5 ... Zfp57 Zic3 #> rowData names(0): #> colnames(1000): embryo2_Pos29_cell110_z2 embryo2_Pos29_cell117_z2 ... #>   embryo2_Pos50_cell361_z5 embryo2_Pos50_cell372_z2 #> colData names(5): uniqueID sample_id entropy initCluster initSubcluster #> reducedDimNames(1): PCA #> mainExpName: NULL #> altExpNames(0): #> spatialCoords names(2) : X Y #> imgData names(1): sample_id"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/clustSIGNAL.html","id":null,"dir":"Reference","previous_headings":"","what":"ClustSIGNAL — clustSIGNAL","title":"ClustSIGNAL — clustSIGNAL","text":"clustering method spatially-resolved cell-type classification spatial transcriptomics data. tool generates uses adaptively smoothed, spatially informed gene expression data clustering.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/clustSIGNAL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ClustSIGNAL — clustSIGNAL","text":"","code":"clustSIGNAL(   spe,   samples,   dimRed = \"None\",   batch = FALSE,   batch_by = \"None\",   NN = 30,   kernel = \"G\",   spread = 0.3,   sort = TRUE,   threads = 1,   outputs = \"c\",   clustParams = list(clust_c = 0, subclust_c = 0, iter.max = 30, k = 10, cluster.fun =     \"louvain\") )"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/clustSIGNAL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ClustSIGNAL — clustSIGNAL","text":"spe SpatialExperiment object containing spatial coordinates 'spatialCoords' matrix normalised gene expression 'logcounts' assay. samples character indicating name colData(spe) column containing sample names. dimRed character indicating name reduced dimensions use SpatialExperiment object (.e., reducedDimNames(spe)). Default value 'None'. batch logical parameter whether perform batch correction. Default value FALSE. batch_by character indicating name colData(spe) column containing batch names. Default value 'None'. NN integer number neighbouring cells function consider. value must greater equal 1. Default value 30. kernel character type distribution used. two valid values \"G\" \"E\" Gaussian exponential distributions, respectively. Default value \"G\". spread numeric value distribution spread, represented standard deviation Gaussian distribution rate exponential distribution. Default value 0.3 Gaussian distribution. recommended value 5 exponential distribution. sort logical parameter whether sort neighbourhood initial clusters. Default value TRUE. threads numeric value number CPU cores used analysis. Default value set 1. outputs character type output return user. \"c\" data frame cell IDs respective ClustSIGNAL cluster labels, \"n\" ClustSIGNAL cluster dataframe plus neighbourhood matrix, \"s\" ClustSIGNAL cluster dataframe plus final SpatialExperiment object, \"\" 3 outputs. clustParams list parameters TwoStepParam clustering methods: clust_c number centers use clustering KmeansParam. default set 0, case method uses either 5000 centers 1/5th total cells data number centers, whichever lower. subclust_c number centers use sub-clustering initial clusters KmeansParam. default value 0, case method uses either 1 center half total cells initial cluster number centers, whichever higher. iter.max maximum number iterations perform clustering sub-clustering KmeansParam. Default value 30. k numeric value indicating k-value used clustering sub-clustering NNGraphParam. Default value 10. cluster.fun character indicating graph clustering method used NNGraphParam. default, Louvain method used.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/clustSIGNAL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ClustSIGNAL — clustSIGNAL","text":"list outputs depending type outputs specified main function call. 1. clusters: data frame cell names ClustSIGNAL cluster classification. 2. neighbours: character matrix containing cells IDs cell's NN neighbours. 3. spe_final: SpatialExperiment object containing original spe object data plus initial cluster subcluster labels, entropy values, smoothed gene expression, ClustSIGNAL cluster labels.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/clustSIGNAL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ClustSIGNAL — clustSIGNAL","text":"","code":"data(ClustSignal_example)  names(colData(spe)) #> [1] \"uniqueID\"       \"sample_id\"      \"entropy\"        \"initCluster\"    #> [5] \"initSubcluster\" # identify the column name with sample labels samples = \"sample_id\" res_list <- clustSIGNAL(spe, samples, outputs = \"c\") #> [1] \"Calculating PCA. Time 06:40:44\" #> [1] \"ClustSIGNAL run started. Time 06:40:44\" #> [1] \"Initial nonspatial clustering performed. Clusters = 3 Time 06:40:44\" #> [1] \"Nonspatial subclustering performed. Subclusters = 10 Time 06:40:45\" #> [1] \"Regions defined. Time 06:40:46\" #> [1] \"Region heterogeneity calculated. Time 06:40:46\" #> [1] \"Smoothing performed. NN = 30 Kernel = G Spread = 0.3 Time 06:40:46\" #> [1] \"Nonspatial clustering performed on smoothed data. Clusters = 7 Time 06:40:46\" #> [1] \"ClustSIGNAL run completed. 06:40:46\" #> Time difference of 2.25625 secs"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-calculateProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell neighbourhood composition — .calculateProp","title":"Cell neighbourhood composition — .calculateProp","text":"function calculate cell neighbourhood composition initial cluster labels.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-calculateProp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell neighbourhood composition — .calculateProp","text":"","code":".calculateProp(arr)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-calculateProp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell neighbourhood composition — .calculateProp","text":"arr vector initial subcluster labels cell neighbourhood.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-calculateProp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell neighbourhood composition — .calculateProp","text":"table initial subcluster proportions neighbourhood.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellName.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighbour cell naming — .cellName","title":"Neighbour cell naming — .cellName","text":"function fetch cell IDs.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbour cell naming — .cellName","text":"","code":".cellName(cell, Clust)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbour cell naming — .cellName","text":"cell vector neighbourhood cell indices. cell indices indicate row number cells sample metadata. Clust data frame initial cluster labels cell sample.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Neighbour cell naming — .cellName","text":"data frame cell IDs neighbourhood cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellNameSort.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighbour cell sorting — .cellNameSort","title":"Neighbour cell sorting — .cellNameSort","text":"function perform neighbourhood cell sorting. Neighbourhood cells belong initial cluster index cell moved closer index cell.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellNameSort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbour cell sorting — .cellNameSort","text":"","code":".cellNameSort(cell, Clust)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellNameSort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbour cell sorting — .cellNameSort","text":"cell vector neighbourhood cell indices. cell indices indicate row number cells sample metadata. Clust data frame initial cluster labels cell sample.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-cellNameSort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Neighbour cell sorting — .cellNameSort","text":"data frame cell IDs sorted neighbourhood cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-clustNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighbour cell initial subcluster label — .clustNum","title":"Neighbour cell initial subcluster label — .clustNum","text":"function fetch initial subcluster label cell.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-clustNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbour cell initial subcluster label — .clustNum","text":"","code":".clustNum(cell, subClust)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-clustNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbour cell initial subcluster label — .clustNum","text":"cell vector neighbourhood cell indices. cell indices indicate row number cells sample metadata. subClust data frame initial subcluster labels cell sample.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-clustNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Neighbour cell initial subcluster label — .clustNum","text":"data frame initial subcluster labels neighbourhood cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-exp_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential distribution weights — .exp_kernel","title":"Exponential distribution weights — .exp_kernel","text":"function generate weights exponential distribution.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-exp_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential distribution weights — .exp_kernel","text":"","code":".exp_kernel(ed, NN, rate)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-exp_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential distribution weights — .exp_kernel","text":"ed numeric vector entropy values cell neighbourhoods. NN integer number neighbourhood cells including index cell. rate numeric value rate exponential distribution.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-exp_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential distribution weights — .exp_kernel","text":"matrix columns contain weights associated entropy values.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-gauss_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian distribution weights — .gauss_kernel","title":"Gaussian distribution weights — .gauss_kernel","text":"function generate weights Gaussian distribution.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-gauss_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian distribution weights — .gauss_kernel","text":"","code":".gauss_kernel(ed, NN, sd)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-gauss_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gaussian distribution weights — .gauss_kernel","text":"ed numeric vector entropy values cell neighbourhoods. NN integer number neighbourhood cells including index cell. sd numeric value standard deviation Gaussian distribution.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-gauss_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian distribution weights — .gauss_kernel","text":"matrix columns contain weights associated entropy values.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-generateBPParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating BPParam object — .generateBPParam","title":"Generating BPParam object — .generateBPParam","text":"utility function generate BPPARAM object.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-generateBPParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating BPParam object — .generateBPParam","text":"","code":".generateBPParam(cores = 1)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-generateBPParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating BPParam object — .generateBPParam","text":"cores Desired number cores BPPARAM object.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/dot-generateBPParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating BPParam object — .generateBPParam","text":"BPPPARAM object.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/entropyMeasure.html","id":null,"dir":"Reference","previous_headings":"","what":"Heterogeneity measure — entropyMeasure","title":"Heterogeneity measure — entropyMeasure","text":"function measure heterogeneity cell's neighbourhood terms entropy. Generally, homogeneous neighbourhoods low entropy heterogeneous neighbourhoods high entropy.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/entropyMeasure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heterogeneity measure — entropyMeasure","text":"","code":"entropyMeasure(spe, regXclust, threads = 1)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/entropyMeasure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heterogeneity measure — entropyMeasure","text":"spe SpatialExperiment object initial cluster subcluster labels. regXclust list vectors cell's neighbourhood composition indicated proportion initial subclusters contains. threads numeric value number CPU cores used analysis. Default value set 1.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/entropyMeasure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heterogeneity measure — entropyMeasure","text":"SpatialExperiment object entropy values associated cell.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/entropyMeasure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heterogeneity measure — entropyMeasure","text":"","code":"data(ClustSignal_example)  # requires list containing cluster proportions of each region (regXclust), # generated using the neighbourDetect() function spe <- clustSIGNAL::entropyMeasure(spe, regXclust) #> [1] \"Region heterogeneity calculated. Time 06:40:47\" spe$entropy |> head() #> [1] 0.46900 0.21084 0.69984 0.35336 0.81185 0.35336"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mEmbryo2.html","id":null,"dir":"Reference","previous_headings":"","what":"Mouse Embryo Data — mEmbryo2","title":"Mouse Embryo Data — mEmbryo2","text":"dataset contains spatial transcriptomics data 3 mouse embryos, 351 genes total 57536 cells. vignettes, subset data randomly selecting 5000 cells embryo 2, excluding cells annotated 'low quality'.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mEmbryo2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mouse Embryo Data — mEmbryo2","text":"","code":"data(mEmbryo2)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mEmbryo2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mouse Embryo Data — mEmbryo2","text":"me_expr gene expression matrix normalised counts, rows indicate genes columns indicate cells. me_data data frame cell metadata including cell IDs, sample IDs, cell type annotations, x-y coordinates cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mEmbryo2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mouse Embryo Data — mEmbryo2","text":"Integration spatial single-cell transcriptomic data elucidates mouse organogenesis, Nature Biotechnology, 2021. Webpage: https://www.nature.com/articles/s41587-021-01006-2","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mHypothal.html","id":null,"dir":"Reference","previous_headings":"","what":"Mouse Hypothalamus Data — mHypothal","title":"Mouse Hypothalamus Data — mHypothal","text":"dataset contains spatial transcriptomics data 181 mouse hypothalamus samples, 155 genes total 1,027,080 cells. running vignettes, subset data selecting total 6000 cells 3 samples - Animal 1 Bregma -0.09 (2080 cells) Animal 7 Bregmas 0.16 (1936 cells) -0.09 (1984 cells), excluding cells annotated 'ambiguous', removed 20 genes assessed using different technology.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mHypothal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mouse Hypothalamus Data — mHypothal","text":"","code":"data(mHypothal)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mHypothal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mouse Hypothalamus Data — mHypothal","text":"mh_expr gene expression matrix normalised counts, rows indicate genes columns indicate cells. mh_data data frame cell metadata including cell IDs, sample IDs, cell type annotations, x-y coordinates cells.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/mHypothal.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mouse Hypothalamus Data — mHypothal","text":"Molecular, Spatial Functional Single-Cell Profiling Hypothalamic Preoptic Region, Science, 2018. Webpage: https://www.science.org/doi/10.1126/science.aau5324","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/neighbourDetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell neighbourhood detection — neighbourDetect","title":"Cell neighbourhood detection — neighbourDetect","text":"function identify neighbourhood cell. sort = TRUE, neighbourhoods also sorted cells belonging 'initial cluster' index cell arranged closer .","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/neighbourDetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell neighbourhood detection — neighbourDetect","text":"","code":"neighbourDetect(spe, samples, NN = 30, sort = TRUE, threads = 1)"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/neighbourDetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell neighbourhood detection — neighbourDetect","text":"spe SpatialExperiment object initial cluster subcluster labels. samples character indicating name colData(spe) column containing sample names. NN integer number neighbouring cells function consider. value must greater equal 1. Default value 30. sort logical parameter whether sort neighbourhood initial clusters. Default value TRUE. threads numeric value number CPU cores used analysis. Default value set 1.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/neighbourDetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell neighbourhood detection — neighbourDetect","text":"list containing two items: 1. nnCells, character matrix NN nearest neighbours - rows index cells columns nearest neighbours ranging closest farthest neighbour. sort = TRUE, neighbours belonging initial cluster index cell moved closer . 2. regXclust, list vectors cell's neighbourhood composition indicated proportion initial subclusters contains.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/neighbourDetect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell neighbourhood detection — neighbourDetect","text":"","code":"data(ClustSignal_example)  out_list <- clustSIGNAL::neighbourDetect(spe, samples = \"sample_id\") #> [1] \"Regions defined. Time 06:40:48\" out_list |> names() #> [1] \"nnCells\"   \"regXclust\""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p1_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial non-spatial clustering — p1_clustering","title":"Initial non-spatial clustering — p1_clustering","text":"function perform initial non-spatial clustering sub-clustering normalised gene expression generate 'initial clusters' 'initial subclusters'.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p1_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial non-spatial clustering — p1_clustering","text":"","code":"p1_clustering(   spe,   dimRed = \"None\",   batch = FALSE,   batch_by = \"None\",   threads = 1,   clustParams = list(clust_c = 0, subclust_c = 0, iter.max = 30, k = 10, cluster.fun =     \"louvain\") )"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p1_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial non-spatial clustering — p1_clustering","text":"spe SpatialExperiment object containing spatial coordinates 'spatialCoords' matrix normalised gene expression 'logcounts' assay. dimRed character indicating name reduced dimensions use SpatialExperiment object (.e., reducedDimNames(spe)). Default value 'None'. batch logical parameter whether perform batch correction. Default value FALSE. batch_by character indicating name colData(spe) column containing batch names. Default value 'None'. threads numeric value number CPU cores used analysis. Default value set 1. clustParams list parameters TwoStepParam clustering methods: clust_c number centers use clustering KmeansParam. default set 0, case method uses either 5000 centers 1/5th total cells data number centers, whichever lower. subclust_c number centers use sub-clustering initial clusters KmeansParam. default value 0, case method uses either 1 center half total cells initial cluster number centers, whichever higher. iter.max maximum number iterations perform clustering sub-clustering KmeansParam. Default value 30. k numeric value indicating k-value used clustering sub-clustering NNGraphParam. Default value 10. cluster.fun character indicating graph clustering method used NNGraphParam. default, Louvain method used.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p1_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial non-spatial clustering — p1_clustering","text":"SpatialExperiment object initial cluster subcluster labels cell.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p1_clustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial non-spatial clustering — p1_clustering","text":"","code":"data(ClustSignal_example)  spe <- clustSIGNAL::p1_clustering(spe, dimRed = \"PCA\") #> [1] \"Initial nonspatial clustering performed. Clusters = 4 Time 06:40:48\" #> [1] \"Nonspatial subclustering performed. Subclusters = 12 Time 06:40:49\" spe$nsCluster |> head() #> NULL spe$initCluster |> head() #> [1] 2 2 3 2 2 2 #> Levels: 1 2 3 4"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p2_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Final non-spatial clustering — p2_clustering","title":"Final non-spatial clustering — p2_clustering","text":"function perform clustering adaptively smoothed gene expression data generate ClustSIGNAL clusters.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p2_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final non-spatial clustering — p2_clustering","text":"","code":"p2_clustering(   spe,   batch = FALSE,   batch_by = \"None\",   threads = 1,   clustParams = list(clust_c = 0, subclust_c = 0, iter.max = 30, k = 10, cluster.fun =     \"louvain\") )"},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p2_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final non-spatial clustering — p2_clustering","text":"spe SpatialExperiment object containing adaptively smoothed gene expression. batch logical parameter whether perform batch correction. Default value FALSE. batch_by character indicating name colData(spe) column containing batch names. Default value 'None'. threads numeric value number CPU cores used analysis. Default value set 1. clustParams list parameters TwoStepParam clustering methods: clust_c number centers use clustering KmeansParam. default set 0, case method uses either 5000 centers 1/5th total cells data number centers, whichever lower. subclust_c number centers use sub-clustering initial clusters KmeansParam. parameter used final clustering step. iter.max maximum number iterations perform clustering sub-clustering KmeansParam. Default value 30. k numeric value indicating k-value used clustering NNGraphParam. Default value 10. cluster.fun character indicating graph clustering method used NNGraphParam. default, Louvain method used.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p2_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Final non-spatial clustering — p2_clustering","text":"SpatialExperiment object containing clusters generated smoothed data.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/reference/p2_clustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Final non-spatial clustering — p2_clustering","text":"","code":"data(ClustSignal_example)  # For non-spatial clustering of normalised counts spe <- clustSIGNAL::p2_clustering(spe) #> [1] \"Nonspatial clustering performed on smoothed data. Clusters = 5 Time 06:40:50\" spe$ClustSIGNAL |> head() #> [1] 1 1 4 1 1 1 #> Levels: 1 2 3 4 5"},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0999-2025-03-27","dir":"Changelog","previous_headings":"","what":"ClustSIGNAL v0.99.9 (2025-03-27)","title":"ClustSIGNAL v0.99.9 (2025-03-27)","text":"Minor updates vignette content.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0998-2025-03-21","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.8 (2025-03-21)","title":"clustSIGNAL v0.99.8 (2025-03-21)","text":"neighbourhood entropy calculation now includes index cell’s initial subcluster label. ensure distinct cells existing otherwise completely homogeneous space taken account measuring neighbourhood heterogeneity. Following additional parameter testing simulated data, changed default values spread Gaussian distribution (0.05 0.3) clustering k (5 10), recommended value spread exponential distribution (20 5). Moved helper functions utilities.R file. Minor updates column names initial cluster subcluster labels stored first clustering step. Updated descriptions functions package. Improved tutorial vignette content.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0997-2025-01-08","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.7 (2025-01-08)","title":"clustSIGNAL v0.99.7 (2025-01-08)","text":"Minor updates. Renamed example dataset example.RData ClustSignal_example.RData Updated DESCRIPTION file add bluster package version (>= 1.16.0) required run ClustSIGNAL.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0996-2024-12-11","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.6 (2024-12-11)","title":"clustSIGNAL v0.99.6 (2024-12-11)","text":"Modified adaptiveSmoothing() function improve runtime. Improved tutorial vignette content. Added step--step ClustSIGNAL run guide tutorial vignette. Removed user parameter cells. package automatically uses column names input SpatialExperiment object cell ID. Added cell id check - throws error duplicates found among column names input SpatialExperiment object.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0995-2024-11-28","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.5 (2024-11-28)","title":"clustSIGNAL v0.99.5 (2024-11-28)","text":"Fixed issue absence spatial coordinates throwing error beginning run.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0994-2024-11-28","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.4 (2024-11-28)","title":"clustSIGNAL v0.99.4 (2024-11-28)","text":"Corrected character check output format type.","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0003-2024-10-31","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.00.3 (2024-10-31)","title":"clustSIGNAL v0.00.3 (2024-10-31)","text":"Clustering parameter options added package Initial final clustering steps now separate functions Test units added package","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0002-2024-10-08","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.00.2 (2024-10-08)","title":"clustSIGNAL v0.00.2 (2024-10-08)","text":"Updated parallel runs smoothing function faster runs","code":""},{"path":"https://sydneybiox.github.io/clustSIGNAL/news/index.html","id":"clustsignal-v0990-2024-09-19","dir":"Changelog","previous_headings":"","what":"clustSIGNAL v0.99.0 (2024-09-19)","title":"clustSIGNAL v0.99.0 (2024-09-19)","text":"Submitted Bioconductor.","code":""}]
